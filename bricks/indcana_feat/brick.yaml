name: indcana_feat
description: Generate feature structure template based on Clean Architecture

# The following defines the brick repository url.
# Uncomment and update the following line before publishing the brick.
# repository: https://github.com/my_org/my_repo

# The following defines the version and build number for your brick.
# A version number is three numbers separated by dots, like 1.2.34
# followed by an optional build number (separated by a +).
version: 1.0.0

# The following defines the environment for the current brick.
# It includes the version of mason that the brick requires.
environment:
  mason: ">=0.1.0-dev.57 <0.1.0"

# Variables specify dynamic values that your brick depends on.
# Zero or more variables can be specified for a given brick.
# Each variable has:
#  * a type (string, number, boolean, enum, array, or list)
#  * an optional short description
#  * an optional default value
#  * an optional list of default values (array only)
#  * an optional prompt phrase used when asking for the variable
#  * a list of values (enums only)
#  * an optional separator (list only)
vars:
  name:
    type: string
    description: What feature do you want to generate?
    default: home
    prompt: What is your feature name?
  # usecase:
  #   type: boolean
  #   description: Do you want to generate usecases class for this feature?
  #   prompt: Generate usecase?
  # type:
  #   type: enum
  #   description: Type of BLoC you want to generate (Bloc or Cubit style)
  #   default: bloc
  #   prompt: Choose type for the initial BLoC
  #   values:
  #     - bloc
  #     - cubit
  #     - flosha
  # immutable:
  #   type: enum
  #   description: Immutable package to ensure state and event immutability
  #   default: equatable
  #   prompt: Choose your immutable package for the initial BLoC
  #   values:
  #     - equatable
  #     - freezed
  # pagination:
  #   type: boolean
  #   description: Make the BLoC able to handle pagination, suitable for list views
  #   prompt: Handle pagination with the initial BLoC?
