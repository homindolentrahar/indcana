name: indcana_bloc
description: Generate BLoC architecture for your project, complete with event and state classes

# The following defines the brick repository url.
# Uncomment and update the following line before publishing the brick.
# repository: https://github.com/my_org/my_repo

# The following defines the version and build number for your brick.
# A version number is three numbers separated by dots, like 1.2.34
# followed by an optional build number (separated by a +).
version: 1.0.0

# The following defines the environment for the current brick.
# It includes the version of mason that the brick requires.
environment:
  mason: ">=0.1.0-dev.57 <0.1.0"

# Variables specify dynamic values that your brick depends on.
# Zero or more variables can be specified for a given brick.
# Each variable has:
#  * a type (string, number, boolean, enum, array, or list)
#  * an optional short description
#  * an optional default value
#  * an optional list of default values (array only)
#  * an optional prompt phrase used when asking for the variable
#  * a list of values (enums only)
#  * an optional separator (list only)
vars:
  feat:
    type: string
    description: In which feature do you want to generate the BLoC?
    default: global
    prompt: What is your feature name?
  name:
    type: string
    description: Name of the BLoC (Bloc/Cubit class, event, and state classes will be named based on this)
    default: example
    prompt: What is your BLoC name?
  type:
    type: enum
    description: Type of BLoC you want to generate (Bloc or Cubit style)
    default: bloc
    prompt: Choose your BLoC type
    values:
      - bloc
      - cubit
  immutable:
    type: enum
    description: Immutable package to ensure state and event immutability
    default: equatable
    prompt: Choose your immutable package
    values:
      - equatable
      - freezed
  pagination:
    type: boolean
    description: Make the BLoC able to handle pagination, suitable for list views
    prompt: Handle pagination with this BLoC?
